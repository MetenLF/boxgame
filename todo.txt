This is just a list of random stuff I need to organize my own messy mind.

Plans (new!):

OK- rewrite this entire thing in vanilla javascript

OK- start a repo

OK- rework game data variables into a huge object so I can work better later on the save and load

OK- make game autoload when page loads

OK- make sure interface is automatically updated with that (logic rework)

OK- save game and load game
. save game
. load game
. delete save
. buttons to do these things

OK- Implement milestones as a new and more versatile way to display new interface elements

TECHNICALLY OK WILL BE DEVELOPED LATER- Make an achievements object

OK- make the hire box maker function a more versatile and global worker hire function

OK- Finally implement box baker and the baked boxes

OK- Implement pox wakers!
. very expensive
. will be upgrade resource

OK- testing utilities
. really need them now!!
. somewhere where I can hide buttons to help me add resources and stuff
. activate testing utilities by typing ta() into the console

OK- rework some of the interface, its looking kinda bad

OK- add upgrades
. create an upgrade object
. hide the upgrades card
. bind the card to a milestone 
. hide all the upgrades 
. bind all the upgrades to milestones 
. show every single one of those elements whenever we hit a threshold
. implement purchase of the upgrades 
. implement their effects on the game

OK- improve the way the hire buttons are rendered because they're literally going crazy thanks to the icon
. and the worker counters too because they don't need to be updated all the goddamn time.

OK- completely rework the milestone function (interfaceDisplayer) because its dumb to copy and paste the same damn code
. change the name property of the milestones to an elements array or something
. this new property will contain which elements will be displayed upon milestone completion

OK- OH MY GOD TURNS OUT EVAL() IS THE JAVASCRIPT BABA YAGA OH GOD OH FUCK I NEED TO REMOVE IT

OK- do the same with the interfaceIO function

OK- actually one more eval to remove from the game in the upgrades engine

OK- upgrade of box stacking should make the click button get stacked boxes just for fun, instead of in a line

OK- next click power upgrade should do the same thing but on a line, giving the player a 4x4 amount of boxes per click 

OK- one more click power upgrade should make the boxes more compact, thus changing the icon to cubes instead.

OK- start using lets instead of vars

WHEN I NEED TO I WILL DO THIS- see if I can use arrow functions like a goddamn functional 2019 javascript developer

OK- finish implementing meowconomy with a window-long progress bar

- finish implementing meowpocalypse with another progress bar that supersets the previous one
. this warrants a small rework of existing stuff to compensate for any faulty logic and progress 
. also will need some more upgrades for speed
. and a limit of 100 to the progress to trigger the endgame

- rebalance the whole game 

- create an end game state

- Add two tabs on the upgrades card: one shows upgrades the player can buy (based on progression) and then other one a list of bought upgrades

- add cats. They like boxes

- cats trigger a progress bar called Meowconomy that will increase based on the number of boxes you have stored

NO IDEA WHAT TO DO HERE- apparently our game is using about 10% CPU so what the hell. Look into optimization.

- floor at source instead of on every interface update in the counterUpdater function
. I have no idea what I'm doing.
. Think about this some more.


- finish game's core features:
. counters
. workers
. values
. testing utilities
. upgrades
. some progression
. an alert box on the top or something to substitute window alerts

- rewrite everything using more modern javascript or typescript I have no clue

- use something else for the interface and learn some css preprocessor

- finally go use some goddamn framework like goddamn react or vue or angular